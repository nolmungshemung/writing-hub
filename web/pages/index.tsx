import type { NextPage } from "next";
import Head from "next/head";
import { dehydrate, QueryClient, useQuery } from "react-query";
import { getPocket } from "~/client/pocket";
import styles from "../styles/Home.module.css";

const Home: NextPage = () => {
  const {
    data: pocket,
    isLoading,
    error,
  } = useQuery(
    [
      "poke",
      {
        offset: 20,
        limit: 20,
      },
    ],
    () => getPocket()
  );

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div>
        {isLoading ? (
          <div>loading...</div>
        ) : error ? (
          <div>error...</div>
        ) : !!pocket ? (
          <div>
            {pocket.results.map((po) => (
              <div key={po.name}>
                <p>{po.name}</p>
                <p>{po.url}</p>
              </div>
            ))}
          </div>
        ) : (
          <div>empty pocketmon data...</div>
        )}
      </div>
    </div>
  );
};

export async function getServerSideProps() {
  const queryClient = new QueryClient();

  await queryClient.prefetchInfiniteQuery("poke", () => getPocket(), {
    staleTime: 1000,
  });

  const dehydratedState = JSON.parse(JSON.stringify(dehydrate(queryClient)));

  return {
    props: {
      dehydratedState,
    },
  };
}

export default Home;
